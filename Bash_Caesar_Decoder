#!/bin/bash

#Inputting plaintext, cipher, and key
read -p  'Message: ' plaintext

read -p 'Rotation: ' rot
rot2=$(($rot+1))

read -p 'Key: ' key

#Checks rot to see if it's between 0-25
if [ $rot -gt 25 ] || [ $rot -lt 0 ]
then
        echo "Not a valid Rotation. Please pick a number between 0-25.";exit
fi

#Sanitizes and ensures all characters of the Key are lowercase letters
key=$(echo $key|tr '[:upper:]' '[:lower:]')
key=${key//[^a-z]/}
#echo $key

#Appends the key to a standard alphabet and removes spaces between letters
alphabet=$(echo -n $key && echo {a..z}|tr -d ' ')

#Checks each letter in the alphabet to see if they've been used before. 
#If so, it removes the duplicate letters.
cipher=$(echo $alphabet|awk -v FS="" '{
  for(i=1;i<=NF;i++)
    str=(++a[$i]==1?str $i:str)
}
END {print str}')

#Creates two partial alphabets based on the rotation
#Then appends them together to get the final rotated cipher alphabet.
TestA=$(echo $cipher | awk -v X="$rot2" '{print substr($0,X,26)}')
TestB=$(echo $cipher | awk -v Y="$rot" '{print substr($0,1,Y)}')
rotcipher="$TestA$TestB"
echo $rotcipher
echo $cipher

#Creates a second alphabet for Upper Case characters
ROTCIPHER=$(echo $rotcipher|tr '[:lower:]' '[:upper:]')
CIPHER=$(echo $cipher|tr '[:lower:]' '[:upper:]')
#echo $ROTCIPHER

#Uses sed to transliterate the plaintext using the 'rotcipher' alphabet
#Also runs through 'ROTCIPHER' for upper case letters.
ciphertext=$(echo $plaintext|sed -e "y/$rotcipher/$cipher/"|sed -e "y/$ROTCIPHER/$CIPHER/")


#Shows the encrypted ciphertext
#echo $plaintext
echo "Ciphertext: "$ciphertext

